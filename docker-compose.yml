####################################################################################
# docker-compose file for Apache Guacamole
# from https://github.com/boschkundendienst/guacamole-docker-compose
#
# The initial login to the guacamole webinterface is:
#   Username: guacadmin
#   Password: guacadmin
#
# Make sure you change it immediately!
#
# IMPORTANT
# The following permissions must be set for the 'record' directories for recordings to work properly:
# sudo chown -R 1000:1001 ./record
# sudo chmod -R 2750 ./record
####################################################################################

# create a network 'guacnetwork_compose' in mode 'bridged'
networks:
  guacnetwork_compose:
    driver: bridge

services:
  # Windows XP server, serves as host to test guacamole
  windows:
    cap_add:
      - NET_ADMIN
    container_name: ${WINDOWS_CONTAINER_NAME}
    devices:
      - /dev/kvm
    env_file: .env
    environment:
      USERNAME: ${WINDOWS_USERNAME} # set it in .env file
      PASSWORD: ${WINDOWS_PASSWORD} # set it in .env file
      VERSION: "winxp"
    image: dockurr/windows
    networks:
      - guacnetwork_compose
    stop_grace_period: 2m
    volumes:
      - ./windata:/storage:rw
    # ports: # Uncomment this block for debugging only
    #   - 8006:8006
    #   - 3390:3389/tcp
    #   - 3390:3389/udp

  # Simple Linux server with SSH, serves as host to test guacamole
  debian:
    container_name: ${DEBIAN_CONTAINER_NAME}
    image: debian_ssh # custom build with SSH server, see Dockerfile
    networks:
      - guacnetwork_compose
    # ports: # Uncomment this block for debugging only
    #   - 5000:22/tcp

  # postgres, guacamole database
  postgres:
    container_name: ${POSTGRES_CONTAINER_NAME}
    env_file: .env
    environment:
      PGDATA: /var/lib/postgresql/data/guacamole
      POSTGRES_DB: guacamole_db
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} # set it in .env file
      POSTGRES_USER: guacamole_user
    image: postgres:15.2-alpine
    networks:
      - guacnetwork_compose
    restart: always
    volumes:
      - ./data:/var/lib/postgresql/data:Z # hosts database data
      - ./init:/docker-entrypoint-initdb.d:z # init script

  # guacd, guacamole daemon
  guacd:
    container_name: ${GUACD_CONTAINER_NAME}
    image: guacamole/guacd
    networks:
      - guacnetwork_compose
    restart: always
    volumes:
      - ./drive:/drive:rw
      - ./record:/var/lib/guacamole/recordings:rw

  # guacamole, frontend
  guacamole:
    container_name: ${GUACAMOLE_CONTAINER_NAME}
    depends_on:
      - guacd
      - postgres
    env_file: .env
    environment:
      GUACD_HOSTNAME: guacd
      POSTGRES_DATABASE: guacamole_db
      POSTGRES_HOSTNAME: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: guacamole_user
      RECORDING_SEARCH_PATH: /var/lib/guacamole/recordings
    image: guacamole/guacamole
    networks:
      - guacnetwork_compose
    ports:
      - 8080/tcp
    restart: always
    volumes:
      - ./drive:/drive:rw
      - ./record:/var/lib/guacamole/recordings:ro

  # nginx, reverse proxy
  nginx:
    container_name: ${NGINX_CONTAINER_NAME}
    image: nginx:latest
    networks:
      - guacnetwork_compose
    ports:
      - 8443:443
    restart: always
    volumes:
      - ./certs/server.crt:/etc/nginx/ssl/self.cert:ro # this is generated by init.sh
      - ./certs/server.key:/etc/nginx/ssl/self-ssl.key:ro
      - ./nginx_template:/etc/nginx/templates:ro # config file for nginx